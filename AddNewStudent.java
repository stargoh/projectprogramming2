/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import javax.swing.*;
import java.util.*;
import static project.Student.student;
import static project.Student.counter;
//import static project.StudentInformationSystem.counter;

/**
 *
 * @author Star Goh
 */

    
public class AddNewStudent extends javax.swing.JFrame {

    /**
     * Creates new form AddNewStudent
     */
    public static int i = 0; //Count number of student
   
    //public static int counter = 0;

    
    
    public AddNewStudent() {
        initComponents();
        setLocationRelativeTo(null);
        SV.setEnabled(false);
        //student = 
        //populateArrayList();

    }
    
    /*public void populateArrayList(){
        try
        {
            FileInputStream file = new FileInputStream("")
        }
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        LabelMatric = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        Matric = new javax.swing.JTextField();
        LabelName = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        LabelCWMark = new javax.swing.JLabel();
        CW = new javax.swing.JTextField();
        LabelCWMark1 = new javax.swing.JLabel();
        Final = new javax.swing.JTextField();
        LabelStudentType = new javax.swing.JLabel();
        underRB = new javax.swing.JRadioButton();
        postRB = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        SV = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create New Student");

        LabelMatric.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelMatric.setText("Matric Number:");

        Title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Title.setText("Create a new Student by entering the data below:");

        Matric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatricActionPerformed(evt);
            }
        });

        LabelName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelName.setText("Name: ");

        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        LabelCWMark.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelCWMark.setText("Coursework Mark:");

        LabelCWMark1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelCWMark1.setText("Final Mark:");

        Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalActionPerformed(evt);
            }
        });

        LabelStudentType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LabelStudentType.setText("Student Type:");

        buttonGroup1.add(underRB);
        underRB.setText("Undergraduate");
        underRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                underRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(postRB);
        postRB.setText("Postgraduate");
        postRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postRBActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Supervisor Name:");

        SV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SVActionPerformed(evt);
            }
        });

        SaveButton.setIcon(new javax.swing.ImageIcon("E:\\User\\Downloads\\icons8-save-30.png")); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        ResetButton.setIcon(new javax.swing.ImageIcon("E:\\User\\Downloads\\icons8-reset-30.png")); // NOI18N
        ResetButton.setText("Reset");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelCWMark)
                    .addComponent(LabelCWMark1)
                    .addComponent(LabelStudentType)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(postRB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(underRB, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(Final, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(SV)
                    .addComponent(CW))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(LabelMatric)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(LabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Matric)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(141, 141, 141))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SaveButton)
                        .addGap(28, 28, 28)
                        .addComponent(ResetButton)
                        .addGap(165, 165, 165))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelMatric, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Matric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCWMark)
                    .addComponent(CW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCWMark1)
                    .addComponent(Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelStudentType)
                    .addComponent(underRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(postRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(ResetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MatricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatricActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MatricActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FinalActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed

        // boolean save = false;
        int save = 1, flag = 1;
        if(counter==0)
            counter = 0;
      
        if (save == 1) {
            if (Name.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter all fields!");
                //save = false;
            } else {
                
                
                String name = Name.getText().trim();
                String matric = Matric.getText().trim();
                String cwMark = CW.getText().trim();
                String finalMark = Final.getText().trim();
                String svName = SV.getText();
                String studType = "";

                try {
                    int matricNo = Integer.parseInt(matric);
                    double markCW = Double.parseDouble(cwMark);
                    double markFinal = Double.parseDouble(finalMark);
                    String grade = this.setGrade(markCW, markFinal);
                    
                    if (underRB.isSelected()) {
                        studType = "Undergraduate";
                        svName = "";
                        Student std = new UndergraduateStudent (matricNo, name, markCW, markFinal, grade, studType,svName); //count number of student
                        
                        student.add(counter,std);
                        
                        //System.out.println(i);
                       
                    } else if (postRB.isSelected()) {
                        studType = "Postgraduate";
                        Student std = new PostgraduateStudent (matricNo, name, markCW, markFinal, grade ,studType, svName); //counting number of postgraduate student
                        student.add(counter,std);
                        
                    }

                    counter++;
                    
                    
                } catch (NumberFormatException ee) {
                    JOptionPane.showMessageDialog(null, "Please enter valid Information!");

                    flag = 2;
                    
                }

                if (flag != 2) {

                    flag = 3;
                }

            }

        }
        if (flag == 3) {
            JOptionPane.showMessageDialog(null, "Your Data Was Sucessfully Saved!");
            Name.setText("");
            Matric.setText("");
            CW.setText("");
            Final.setText("");
            SV.setText("");

        } else if (flag == 2) {
            JOptionPane.showMessageDialog(null, "Your Data Not Save!");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_SaveButtonActionPerformed

    public String setGrade(double cwMark, double finalMark) { // according to UUM grading scheme

        String grade;
        double totalMark = 0;
        totalMark = (cwMark * 0.6) + (finalMark * 0.4);

        if ((totalMark >= 0) && (totalMark <= 34)) {
            grade = "F";
        } else if ((totalMark >= 35) && (totalMark <= 39)) {
            grade = "D";
        } else if ((totalMark >= 40) && (totalMark <= 44)) {
            grade = "D+";
        } else if ((totalMark >= 45) && (totalMark <= 49)) {
            grade = "C-";
        } else if ((totalMark >= 50) && (totalMark <= 54)) {
            grade = "C";
        } else if ((totalMark >= 55) && (totalMark <= 59)) {
            grade = "C+";
        } else if ((totalMark >= 60) && (totalMark <= 64)) {
            grade = "B-";
        } else if ((totalMark >= 65) && (totalMark <= 69)) {
            grade = "B";
        } else if ((totalMark >= 70) && (totalMark <= 74)) {
            grade = "B+";
        } else if ((totalMark >= 75) && (totalMark <= 79)) {
           grade = "A-";
        } else if ((totalMark >= 80) && (totalMark <= 89)) {
            grade = "A";
        } else if ((totalMark >= 90) && (totalMark <= 100)) {
            grade = "A+";
        } else {
            grade = "X";
            //System.out.println("Invalid data!");
        }
        return grade;
    }

    private void SVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SVActionPerformed

    private void postRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postRBActionPerformed

        if (postRB.isSelected()) {
            SV.setEnabled(true);

        } else {
            SV.setEnabled(false);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_postRBActionPerformed

    private void underRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_underRBActionPerformed
        SV.setEnabled(false);

        if (underRB.isSelected()) {
            SV.setEnabled(false);

        } else {
            SV.setEnabled(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_underRBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CW;
    private javax.swing.JTextField Final;
    private javax.swing.JLabel LabelCWMark;
    private javax.swing.JLabel LabelCWMark1;
    private javax.swing.JLabel LabelMatric;
    private javax.swing.JLabel LabelName;
    private javax.swing.JLabel LabelStudentType;
    private javax.swing.JTextField Matric;
    private javax.swing.JTextField Name;
    private javax.swing.JButton ResetButton;
    private javax.swing.JTextField SV;
    private javax.swing.JButton SaveButton;
    private javax.swing.JLabel Title;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton postRB;
    private javax.swing.JRadioButton underRB;
    // End of variables declaration//GEN-END:variables
}
